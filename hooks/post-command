#!/usr/bin/env bash

set -euo pipefail

if [[ ${BUILDKITE_COMMAND_EXIT_STATUS:-0} != '0' ]]; then
  echo '--- Skipping S3 sync because the command failed'
  exit 0
fi

PACKAGE_JSON="${BUILDKITE_PLUGIN_AWS_S3_SYNC_PACKAGE_JSON:-package.json}"

if [[ -f ${PACKAGE_JSON} ]] ; then
    VERSION="$(jq '.version' "${PACKAGE_JSON}" | sed "s/\"//g")"
else 
    echo "package.json does not exist at the specified path, exiting.."
    exit 1
fi

args=()

# By default delete files from destination that don't exist in source 
args+=("--delete")

# Set the acl to the string provided
if [[ -n "${BUILDKITE_PLUGIN_AWS_S3_SYNC_ACL:-}" ]] ; then
  args+=("--acl" "${BUILDKITE_PLUGIN_AWS_S3_SYNC_ACL}")
fi

# Set object cache control to string provided
if [[ -n "${BUILDKITE_PLUGIN_AWS_S3_SYNC_CACHE_CONTROL:-}" ]] ; then
  args+=("--cache-control" "${BUILDKITE_PLUGIN_AWS_S3_SYNC_CACHE_CONTROL}")
fi

# Set sub directory string
if [[ -n "${BUILDKITE_PLUGIN_AWS_S3_SYNC_SUB_DIRECTORY:-}" ]] ; then
    SUB_DIRECTORY="${BUILDKITE_PLUGIN_AWS_S3_SYNC_SUB_DIRECTORY}"
else
    SUB_DIRECTORY=""
fi


# Print all the arguments, with a space after, properly shell quoted
echo -ne '--- Running: aws s3 sync ' >&2
printf "%q " "${args[@]}"
echo

# Sync to version number path
echo "--- :s3: Syncing ${BUILDKITE_PLUGIN_AWS_S3_SYNC_SOURCE} to ${BUILDKITE_PLUGIN_AWS_S3_SYNC_DESTINATION}/${VERSION}/${SUB_DIRECTORY}"
aws s3 sync "${BUILDKITE_PLUGIN_AWS_S3_SYNC_SOURCE}" "${BUILDKITE_PLUGIN_AWS_S3_SYNC_DESTINATION}/${VERSION}/${SUB_DIRECTORY}" "${args[@]}"

# Sync to latest path
echo "--- :s3: Syncing ${BUILDKITE_PLUGIN_AWS_S3_SYNC_SOURCE} to ${BUILDKITE_PLUGIN_AWS_S3_SYNC_DESTINATION}/latest/${SUB_DIRECTORY}"
aws s3 sync "${BUILDKITE_PLUGIN_AWS_S3_SYNC_SOURCE}" "${BUILDKITE_PLUGIN_AWS_S3_SYNC_DESTINATION}/latest/${SUB_DIRECTORY}" "${args[@]}"
